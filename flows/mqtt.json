[{"id":"ae26feba.51d9","type":"mqtt-broker","broker":"192.168.51.13","port":"1883","clientid":"node-red-mqtt"},{"id":"79eaa9ab.861558","type":"mqtt in","name":"node-mqtt","topic":"phone/test1","broker":"ae26feba.51d9","x":184.1999969482422,"y":69,"z":"675d0a66.98a2f4","wires":[["55d03caa.aa2fc4"]]},{"id":"8e7556d4.718aa8","type":"debug","name":"","active":true,"console":"false","complete":"payload","x":535.2000122070312,"y":76,"z":"675d0a66.98a2f4","wires":[]},{"id":"55d03caa.aa2fc4","type":"function","name":"","func":"// Takes a payload and topic and makes a QoS -1\n// MQTT-SN message buffer out of it.\n\nfunction makeMqttsBuffer(topic,message) {\n    var buf;\n    var p=0;\n    var len = topic.length + message.length + 7;\n    if (len > 254) {\n        p=2;\n        buf = new Buffer(topic.length + message.length + 7 + p);\n        buf[0] = 1;\n        buf[1] = parseInt((len+p)/256);\n        buf[2] = parseInt((len+p)%256);\n    }\n    else {\n        buf = new Buffer(topic.length + message.length + 7 + p);\n        buf[0] = len;\n    }\n    buf[1+p] = 12;\n    buf[2+p] = 96;\n    buf[3+p] = parseInt(topic.length/256);\n    buf[4+p] = parseInt(topic.length%256);\n    buf[5+p] = 32;\n    buf[6+p] = 32;\n    for (var i = 0; i < topic.length ; i++) {\n        buf[7+i+p] = topic.charCodeAt(i);\n    }\n    for (i = 0; i < message.length ; i++) {\n        buf[7+topic.length+i+p] = message.charCodeAt(i);\n    }\n    return buf;\n}\n\n//msg.payload = makeMqttsBuffer(msg.topic, msg.payload);\nmsg.payload = msg.topic + \":\" + msg.payload;\nreturn msg;","outputs":1,"noerr":0,"x":355.20001220703125,"y":85,"z":"675d0a66.98a2f4","wires":[["8e7556d4.718aa8"]]}]